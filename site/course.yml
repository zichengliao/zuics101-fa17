chunks:

-
    title: "ZJUI CS101 Fall 2017"
    id: Welcome
    rules:
    -
        if_after: 2017-09-18 00:00:00
        if_before: 2018-01-22 00:00:00
        weight: 100

    -
        weight: 0

    content: |

        #   ZJUI CS101—Introduction to Computing for Engineering and Science

        | What                 | When and Where |
        | -------------------- | -------------- |
        | **Lectures**         | Tue/Thu [`10h00–10h50`](#lectures) or [`11h00-11h50`](#lectures); `A-0414` |
        | **Labs**             | Wednesday, [`schedule`](#labs) |
        | **Instructor**       |  [Zicheng Liao](mailto:zliao@zju.edu.cn) |
        | **Teaching Assistant**       |  [Lei Zhao](mailto:cs101homework@intl.zju.edu.cn) [Lechao Cheng](mailto:cs101homework@intl.zju.edu.cn) [Qingle Huang](mailto:cs101homework@intl.zju.edu.cn) |
        | **Class forum**      | <a href="https://c.zju.edu.cn/" target="_blank" role="button" class="btn btn-info">Blackboard &raquo;</a> |
        | **repl.it Python** | <a href="https://repl.it/languages/python3" target="_blank" role="button" class="btn btn-info">Run online &raquo;</a> |
        | **Online Python Tutor** | <a href="http://www.pythontutor.com/" target="_blank" role="button" class="btn btn-info">Debug/visualize online &raquo;</a> |
        | ** Online Jupyter Notebook** | <a href="https://try.jupyter.org/" target="_blank" role="button" class="btn btn-info">Run online &raquo;</a> |
        | **Anaconda's latest Python 3.X version to run  Jupyter Notebook** | <a href="http://jupyter.readthedocs.io/en/latest/install.html#installing-jupyter-using-anaconda-and-conda" target="_blank" role="button" class="btn btn-info">Download and install &raquo;</a> |


        ##  Lectures
        <a name="lectures"></a>
        
        | Python Basics | Date       | Supporting Resources |
        | ------- | ---------- | -------------------- |
        | [Lecture #1:  Introduction](repocur:lectures/lec01.pdf) | 2017-09-19 |  |
        | [Lecture #2:  literals, variables](repocur:lectures/lec02.pdf) | 2017-09-21 | [Python session](repocur:lectures/lec02notes.pdf) |
        | [Lecture #3:  data types (`int`, `float`, `str`)](repocur:lectures/lec03.pdf) | 2017-09-26 | [Floating point Overflow/Underflow](http://sites.cs.queensu.ca/courses/cisc121/Record/Week09/Arith.pdf); [Signed-integer representation (Pages 53-55)](https://koclab.cs.ucsb.edu/teaching/cs16/docx/Integers.pdf)|
        | [Lecture #4:  string formatting, functions](repocur:lectures/lec04.pdf) | 2017-09-28 | |
        | [Lecture #5:  functions, control flow, booleans](repocur:lectures/lec05.pdf) | 2017-10-10 | |
        | [Lecture #5:  functions, methods] | 2017-10-12 | |
        | | | |
        
        
        ##  Homework 
        Under construction.
        <!--Homework assignments are due at 6:00 p.m. on the due date. Many homework assignments are from [the CodeLab site](http://www.tcgo1.com/).
        
        |            |          |          |          |          |          |
        | ---------- | -------- | -------- | -------- | -------- | -------- | 
        | [![](repocur:img/banner-hw07.png)](flow:hw07) <br/> **Due** 2016-11-25 |  |  | -->
                
        ##  Labs
        <a name="labs"></a>
        
        | Lab Groups | When   | Where |
        | ---------- | ----   | ----- |
        |A1| **Wed 08h00–09h50** | D-331 |
        |A2| **Wed 10h00–11h50** | D-331 |
        |A3| **Wed 08h00–09h50** | D-211 |
        |B1| **Wed 13h00–14h50** | D-331 |
        |B2| **Wed 15h00–16h50** | D-331 |
        |B3| **Wed 13h00–14h50** | D-211 |
        | | | |
        
        You should attend your own lab section to complete and submit assignments. Exceptions must be approved in advance.
        
        Late Policy: late submission made by Friday 12pm will receive 50% credit; 25% credit by the weekend (Sunday 12pm). No further extension is accepted.
        
        | Session     | Date       | Supporting Resources | Reference ans |
        | ------- | ---------- | ----------------- | ---------- |
        | Lab #1:  get started | 2017-09-20 | [lab01.pdf](repocur:labs/lab01.pdf) | |
        | Lab #2:  Operators and Expression | 2017-09-20 | [lab02.ipynb](repocur:labs/lab02.ipynb); [rocket.py](repocur:labs/rocket.py) | |
        | | | | |
        
        #### Python Installation
        Although we can't provide technical support in setting up your personal machine, if you decide to install Python we warmly recommend using [Anaconda Python](https://www.continuum.io/downloads) 3.5.

        #### Octave (Free Verion "MatLab") Installation
        You can use an online version of Octave [here](http://octave-online.net/). You can also [download and install Octave](https://www.gnu.org/software/octave/download.html) on your own laptop or desktop so that you can use it when offline.

        
        ##  Examinations

        Please bring your campus card and arrive early.  Consider visiting the location ahead of time so you know where you'll be taking the exam.

        | Exam | Date | Supporting Resources |
        | ---- | ---- | -------------------- |
        | Midterm 1 | TBA | |
        | Midterm 2 | TBA | |
        | Final | TBA | |
        | | | |
     
        Conflict exams are available for students with approved exceptions (such as another exam at the same time).  Email course administration *prior* to the date of the midterm for more information.


        ##  Office Hours

        Please email the instructor to arrange a meeting by providing your available time slots.
        
    
        ## References
        
        There is no physical textbook to buy for this course. Below, you will find references that will help you. Some are online textbooks. Others are interactive tutorials. They are listed here in order of quality. If you feel confused or lost, start with Code Academy.
        
        * [CodeAcademy](https://www.codecademy.com/en/tracks/python)
        * Book: [Introduction to Computation and Programming Using Python](https://mitpress.mit.edu/books/introduction-computation-and-programming-using-python-0) ([a Chinese edition](http://product.dangdang.com/1483202832.html)), [archive.org](https://archive.org/details/IntroductionToComputationAndProgrammingUsingPythonRevisedGuttagJohnV.)
        * Book: [Python for Everyone: Exploring Data with Python 3](https://books.trinket.io/pfe/index.html)  
        * [Think Python](http://www.greenteapress.com/thinkpython/)
        * [Learning Python the Hard Way](http://learnpythonthehardway.org/book/)
        * [A Byte of Python](http://www.swaroopch.com/notes/python/)
        * [How to Think Like a Computer Scientist](http://interactivepython.org/runestone/static/thinkcspy/toc.html#t-o-c)
        * [Non-Programmers Tutorial for Python](https://en.wikibooks.org/wiki/Non-Programmer%27s_Tutorial_for_Python_3)
        * [The Python Tutorial](https://docs.python.org/3/tutorial/)
    
    
    
        ## Grading

        | Component | Fraction of Total | Notes |
        | --------- | ----------------- | ----- |
        | Homework  | 20% | Lowest grade dropped |
        | Labs      | 25% | Lowest grade dropped |
        | Lecture quiz | 10% | Participation-based; can drop three |
        | Midterms  | 20% | |
        | Final     | 25% | Comprehensive |
        
        

    

        ### Absence Policy

        Students should attend the lecture and lab section for which they registered, or they will receive a zero for that lecture attendance or lab. Permitted absences require proof of overriding considerations. Official proof of absence need to be in forms of doctor's note or letter provided by an authority that clearly states that the purpose of the letter is to prove absence; examples include a doctor's note, travel proof from an athletic team, etc. Special events might be taken into consideration only if it was contacted at least 72 hours in advance. To request for absence, students shall email the instructor [`zliao@zju.edu.cn`](mailto:zliao@zju.edu.cn). 

        When a student has a permitted absence for lab, make-up labs will be arranged. Make-up labs will be held in office hours under supervision.

        ### Academic Integrity

        Cheating not only robs you of an opportunity to learn, it also devalues your peers' hard work. Because of this, we take cheating very seriously in this course. The first case of cheating will result in a zero on the assignment or exam. The second case of cheating will result in a zero for the course. We will also report instances of cheating to the college and to your department. You'll find the official UIUC university policies on academic integrity [here](http://studentcode.illinois.edu/article1_part4_1-402.html). You can learn more about the UIUC Computer Science Department's stance [here](https://wiki.illinois.edu//wiki/display/undergradProg/Honor+Code).

        Plagiarism is also very easy to detect in a programming class. Do not take shortcuts. Always do your own work. Note that we encourage discussion on course content. However, please write answers/codes to homework and lab assignments on your own (unless in some labs when you are instructed to complete assignments in pairs or groups).

        Our philosophy in this course is based on the fact that (in real life) most of the time you have access to many resources: websites, peers, mentors, books, and others' source code. Your competence will be greatly increased by the resources you can use without recourse to external references, but when learning it only makes sense to let you function in a realistic manner. Thus, for lab exercises and assignments, you should work alone unless told otherwise, but you may consult outside sources of information. Any consultation is subject to the following restrictions: (1) you may not copy that source's work verbatim (i.e., ALWAYS write YOUR OWN code!); and (2) you must cite all sources used and the contribution they made to your work. This policy is designed to protect you against plagiarism.

        You must also protect your own work from plagiarism. If you allow your peers to copy your work, you could end up with academic dishonesty. Do not send solutions to your peers. Do not show them your solution. Do not give out your account passwords. Do not leave your login sessions active.
